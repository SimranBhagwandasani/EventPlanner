{"ast":null,"code":"var _jsxFileName = \"/Users/rahulbhatia/Documents/Spring22/Course/SE/TripPlanner/Client/WebPage/src/pages/Notifs.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@mui/material'; // import { Label } from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Notifs extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      type: \"sale\",\n      message: \"\"\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state); // axios\n      // \t.post('http://localhost:9000/admin/notifs', this.state.message,{\n      // \t\theaders :{\n      // \t\t\t'Content-Type' : 'application/x-www-form-urlencoded',\n      // \t\t\tAccept: 'application/json',\n      // \t\t\t 'Content-Type': 'application/json',\n      // \t\t\ttoken : localStorage.getItem('token'),\n      // \t}}).then(response => {\n      //          console.log(\"yippee\")\n      //         console.log(response)\n      // \t})\n      // \t.catch(error => {\n      // \t\tconsole.log(error)\n      // \t})\n    };\n  }\n\n  render() {\n    const {\n      message\n    } = this.state;\n    const paperStyle = {\n      padding: '30px 20px',\n      width: 300,\n      margin: \"20px auto\"\n    };\n    let buttons1;\n\n    if (this.state.type == \"sale\") {\n      buttons1 = /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 20,\n          style: paperStyle,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              gutterBottom: true,\n              children: \"Please messages for notification !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                color: \"white\"\n              },\n              fullWidth: true,\n              label: \"Enter messsage for notification\",\n              placeholder: \"Enter messsage for notification\",\n              type: \"text\",\n              name: \"message\",\n              value: message,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                marginTop: \"15px\",\n                marginLeft: \"90px\"\n              },\n              children: \"Post noitification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this);\n    } else {\n      buttons1 = /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: this.state.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 36\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Select type of event :   \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.type,\n        onChange: e => {\n          this.setState({\n            type: e.target.value\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sale\",\n          children: \"SALE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"event_attended\",\n          children: \" event_attended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), buttons1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this);\n  }\n\n} // function Notifs(){\n//        const [type,setType] = useState(\"sale\");\n//         let buttons1 ;\n//         if(type == \"sale\"){\n//              buttons1 = (\n//                 // <TextField fullWidth label='text for notifications' placeholder=\"Enter your text\" type='password' \n//                 //              name=\"Password\"\n//                 //             value={\tPassword}\n//                 //         onChange={this.changeHandler}/>\n//                 <h1 style={{color:\"white\"}}>{type}</h1>\n//              )\n//         }\n//         else{\n//             <h1 style={{color:\"white\"}}>{type}</h1>\n//         }\n//         return(\n//             <div >\n//                 <select value={type} onChange={(e) =>{\n//                      const selected = e.target.value;\n//                      setType(selected);\n//                 }}> \n//                 <option value = \"sale\">SALE</option>\n//                 <option value =\"event_attended\"> event_attended</option>\n//                 </select>\n//                 {buttons1}\n//             </div>\n//         )\n// }\n// export default Notifs;","map":{"version":3,"sources":["/Users/rahulbhatia/Documents/Spring22/Course/SE/TripPlanner/Client/WebPage/src/pages/Notifs.js"],"names":["axios","React","Component","Grid","Paper","Avatar","Typography","TextField","Button","Notifs","state","type","message","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","render","paperStyle","padding","width","margin","buttons1","color","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React , {Component}from \"react\";\r\n\r\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@mui/material'\r\n// import { Label } from \"reactstrap\";\r\n\r\n\r\n\r\nexport default class Notifs extends Component  {\r\n\r\n    state={\r\n        type: \"sale\",\r\n        message: \"\"\r\n    }\r\n    changeHandler = e => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n    submitHandler = e => {\r\n\t\te.preventDefault()\r\n\t\tconsole.log(this.state)\r\n\t\t\r\n\t\t\r\n     \r\n\t\t// axios\r\n\t\t// \t.post('http://localhost:9000/admin/notifs', this.state.message,{\r\n\t\t// \t\theaders :{\r\n\t\t// \t\t\t'Content-Type' : 'application/x-www-form-urlencoded',\r\n\t\t// \t\t\tAccept: 'application/json',\r\n\t\t// \t\t\t 'Content-Type': 'application/json',\r\n\t\t// \t\t\ttoken : localStorage.getItem('token'),\r\n\t\t// \t}}).then(response => {\r\n        //          console.log(\"yippee\")\r\n        //         console.log(response)\r\n\t\t// \t})\r\n\t\t// \t.catch(error => {\r\n\t\t// \t\tconsole.log(error)\r\n\t\t// \t})\r\n            }\r\n    render(){\r\n        const { message } = this.state;\r\n        const paperStyle = { padding: '30px 20px', width: 300, margin: \"20px auto\" }\r\n        let buttons1;\r\n        if(this.state.type == \"sale\"){\r\n\r\n            \r\n\r\n             buttons1 = (  <Grid>\r\n                 \r\n                         <Paper elevation={20} style={paperStyle}>\r\n                         <Grid align='center'>\r\n                    \r\n                           < Typography variant='caption' gutterBottom>Please messages for notification !</Typography>\r\n                         </Grid>\r\n                         <form onSubmit={this.submitHandler}>\r\n                      <TextField style={{color:\"white\"}} fullWidth label='Enter messsage for notification' placeholder=\"Enter messsage for notification\" type=\"text\"\r\n\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\tonChange={this.changeHandler} />\r\n            \r\n                      <Button type='submit' variant='contained' color='primary' style={{marginTop: \"15px\",marginLeft:\"90px\"}}>Post noitification</Button>\r\n                            </form>\r\n                            </Paper>\r\n                            </Grid>\r\n                         )\r\n                    }\r\n            else{\r\n                      buttons1=(   <h1 style={{color:\"white\"}}>{this.state.type}</h1>)\r\n                 }\r\n    \r\n\r\n    return(\r\n\r\n                    <div >\r\n                        <h3 style={{color:\"white\"}}>Select type of event :   </h3>\r\n                        <select value={this.state.type} onChange={(e) =>{\r\n                             \r\n                             this.setState({ type:  e.target.value });\r\n                             \r\n                        }}> \r\n                        \r\n                        <option value = \"sale\">SALE</option>\r\n                        <option value =\"event_attended\"> event_attended</option>\r\n                        \r\n                        </select>\r\n                       \r\n                        {buttons1}\r\n                    </div>\r\n                )\r\n\r\n}}\r\n// function Notifs(){\r\n       \r\n\r\n\r\n//        const [type,setType] = useState(\"sale\");\r\n    \r\n//         let buttons1 ;\r\n\r\n//         if(type == \"sale\"){\r\n//              buttons1 = (\r\n\r\n//                 // <TextField fullWidth label='text for notifications' placeholder=\"Enter your text\" type='password' \r\n//                 //              name=\"Password\"\r\n//                 //             value={\tPassword}\r\n//                 //         onChange={this.changeHandler}/>\r\n\r\n//                 <h1 style={{color:\"white\"}}>{type}</h1>\r\n\r\n//              )\r\n//         }\r\n//         else{\r\n//             <h1 style={{color:\"white\"}}>{type}</h1>\r\n//         }\r\n\r\n//         return(\r\n\r\n//             <div >\r\n//                 <select value={type} onChange={(e) =>{\r\n//                      const selected = e.target.value;\r\n//                      setType(selected);\r\n                     \r\n//                 }}> \r\n                \r\n//                 <option value = \"sale\">SALE</option>\r\n//                 <option value =\"event_attended\"> event_attended</option>\r\n                \r\n//                 </select>\r\n\r\n//                 {buttons1}\r\n//             </div>\r\n//         )\r\n\r\n\r\n// }\r\n\r\n// export default Notifs;\r\n"]},"metadata":{},"sourceType":"module"}