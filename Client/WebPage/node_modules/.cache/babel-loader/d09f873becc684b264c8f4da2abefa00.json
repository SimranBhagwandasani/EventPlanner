{"ast":null,"code":"var _jsxFileName = \"/Users/rahulbhatia/Documents/Spring22/Course/SE/TripPlanner/Client/WebPage/src/pages/Events.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@mui/material'; // import AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\n\nimport { Radio } from '@mui/material';\nimport { RadioGroup } from '@mui/material'; // import FormControlLabel from '@mui/material';\n//  import {FormControl} from '@mui/material';\n\nimport { FormControl } from '@mui/material';\nimport { FormControlLabel } from '@mui/material';\nimport { FormLabel } from '@mui/material'; //import {Checkbox} from '@material-ui/core/Checkbox';\n\nimport { Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      axios.post('http://localhost:9000/event ', this.state, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          token: localStorage.getItem('token')\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        Event_name: \"\",\n        Date: '',\n        Location: '',\n        Time: '',\n        Organizer: ''\n      });\n    };\n\n    this.state = {\n      Event_name: \"\",\n      Date: '',\n      Location: '',\n      Time: '',\n      Organizer: ''\n    };\n  }\n\n  render() {\n    const paperStyle = {\n      padding: '30px 20px',\n      width: 300,\n      margin: \"20px auto\"\n    };\n    const headerStyle = {\n      margin: 0\n    };\n    const avatarStyle = {\n      backgroundColor: '#1bbd7e'\n    };\n    const {\n      Event_name,\n      Date,\n      Location,\n      Time,\n      Organizer\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 20,\n        style: paperStyle,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            gutterBottom: true,\n            children: \"Please Enter Events you want to show !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Event Name\",\n            placeholder: \"Enter your Event name\",\n            type: \"text\",\n            name: \"Event_name\",\n            value: Event_name,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            name: \"Date\",\n            value: Date,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Location\",\n            placeholder: \"Enter your Location\",\n            type: \"text\",\n            name: \"Location\",\n            value: Location,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Time\",\n            placeholder: \"Enter your time for the Event\",\n            type: \"time\",\n            name: \"Time\",\n            value: Time,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Organizer\",\n            placeholder: \"Enter your Organizer\",\n            type: \"text\",\n            name: \"Organizer\",\n            value: Organizer,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              marginTop: \"15px\",\n              marginLeft: \"90px\"\n            },\n            children: \"Submit Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/rahulbhatia/Documents/Spring22/Course/SE/TripPlanner/Client/WebPage/src/pages/Events.js"],"names":["React","Component","axios","Grid","Paper","Avatar","Typography","TextField","Button","Radio","RadioGroup","FormControl","FormControlLabel","FormLabel","Checkbox","Events","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","post","headers","token","localStorage","getItem","then","response","catch","error","Event_name","Date","Location","Time","Organizer","render","paperStyle","padding","width","margin","headerStyle","avatarStyle","backgroundColor","marginTop","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,MAArD,QAAmE,eAAnE,C,CACA;;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACC,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,SAAT,QAA0B,eAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AACA,MAAMC,MAAN,SAAqBd,SAArB,CAA+B;AAC/Be,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAoBhBC,aApBgB,GAoBAC,CAAC,IAAI;AACvB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACA,KAtBkB;;AAAA,SAuBhBC,aAvBgB,GAuBAL,CAAC,IAAI;AACvBA,MAAAA,CAAC,CAACM,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAGA1B,MAAAA,KAAK,CACH2B,IADF,CACO,8BADP,EACuC,KAAKD,KAD5C,EACkD;AAChDE,QAAAA,OAAO,EAAE;AACP,0BAAiB,mCADV;AAEKC,UAAAA,KAAK,EAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFb;AADuC,OADlD,EAOEC,IAPF,CAOOC,QAAQ,IAAI;AACjBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACA,OATF,EAUEC,KAVF,CAUQC,KAAK,IAAI;AACfX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,OAZF;AAaU,WAAKjB,QAAL,CAAc;AACVkB,QAAAA,UAAU,EAAE,EADF;AAEVC,QAAAA,IAAI,EAAE,EAFI;AAKVC,QAAAA,QAAQ,EAAC,EALC;AAMVC,QAAAA,IAAI,EAAC,EANK;AAOVC,QAAAA,SAAS,EAAE;AAPD,OAAd;AAWV,KApDkB;;AAGlB,SAAKd,KAAL,GAAa;AACHU,MAAAA,UAAU,EAAE,EADT;AAEZC,MAAAA,IAAI,EAAE,EAFM;AAKZC,MAAAA,QAAQ,EAAC,EALG;AAMZC,MAAAA,IAAI,EAAC,EANO;AAOZC,MAAAA,SAAS,EAAE;AAPC,KAAb;AAYA;;AAsCEC,EAAAA,MAAM,GAAG;AACV,UAAMC,UAAU,GAAG;AAAEC,MAAAA,OAAO,EAAE,WAAX;AAAwBC,MAAAA,KAAK,EAAE,GAA/B;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KAAnB;AACC,UAAMC,WAAW,GAAG;AAAED,MAAAA,MAAM,EAAE;AAAV,KAApB;AACA,UAAME,WAAW,GAAG;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAApB;AACA,UAAM;AAAEZ,MAAAA,UAAF;AAAaC,MAAAA,IAAb;AAAkBC,MAAAA,QAAlB;AAA2BC,MAAAA,IAA3B;AAAiCC,MAAAA;AAAjC,QAA8C,KAAKd,KAAzD;AACA,wBACI,QAAC,IAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,EAAlB;AAAsB,QAAA,KAAK,EAAEgB,UAA7B;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,QAAZ;AAAA,iCAEI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAA8B,YAAA,YAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAM,UAAA,QAAQ,EAAE,KAAKpB,aAArB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,KAAK,EAAC,YAA3B;AAAwC,YAAA,WAAW,EAAC,uBAApD;AACb,YAAA,IAAI,EAAC,MADQ;AAEb,YAAA,IAAI,EAAC,YAFQ;AAGb,YAAA,KAAK,EAAEc,UAHM;AAIb,YAAA,QAAQ,EAAE,KAAKpB;AAJF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,SAAD;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,IAAI,EAAC,MAA1B;AACb,YAAA,IAAI,EAAC,MADQ;AAEb,YAAA,KAAK,EAAEqB,IAFM;AAGb,YAAA,QAAQ,EAAE,KAAKrB;AAHF;AAAA;AAAA;AAAA;AAAA,kBANJ,eAUI,QAAC,SAAD;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,KAAK,EAAC,UAA3B;AAAsC,YAAA,WAAW,EAAC,qBAAlD;AAAwE,YAAA,IAAI,EAAC,MAA7E;AACb,YAAA,IAAI,EAAC,UADQ;AAEb,YAAA,KAAK,EAAEsB,QAFM;AAGb,YAAA,QAAQ,EAAE,KAAKtB;AAHF;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAiBI,QAAC,SAAD;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,KAAK,EAAC,MAA3B;AAAkC,YAAA,WAAW,EAAC,+BAA9C;AAA8E,YAAA,IAAI,EAAC,MAAnF;AACb,YAAA,IAAI,EAAC,MADQ;AAEb,YAAA,KAAK,EAAGuB,IAFK;AAGb,YAAA,QAAQ,EAAE,KAAKvB;AAHF;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAqBI,QAAC,SAAD;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,KAAK,EAAC,WAA3B;AAAuC,YAAA,WAAW,EAAC,sBAAnD;AAA0E,YAAA,IAAI,EAAC,MAA/E;AACb,YAAA,IAAI,EAAC,WADQ;AAEb,YAAA,KAAK,EAAGwB,SAFK;AAGb,YAAA,QAAQ,EAAE,KAAKxB;AAHF;AAAA;AAAA;AAAA;AAAA,kBArBJ,eA4BI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,WAA9B;AAA0C,YAAA,KAAK,EAAC,SAAhD;AAA0D,YAAA,KAAK,EAAE;AAACiC,cAAAA,SAAS,EAAE,MAAZ;AAAmBC,cAAAA,UAAU,EAAC;AAA9B,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCH;;AAnG+B;;AAsGhC,eAAerC,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@mui/material'\n// import AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { Radio } from '@mui/material';\nimport { RadioGroup } from '@mui/material';\n// import FormControlLabel from '@mui/material';\n//  import {FormControl} from '@mui/material';\nimport { FormControl } from '@mui/material';\n import { FormControlLabel } from '@mui/material';\n import { FormLabel } from '@mui/material';\n //import {Checkbox} from '@material-ui/core/Checkbox';\n import { Checkbox } from '@mui/material';\n class Events extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n            Event_name: \"\",\n\t\t\tDate: '',\n\t\t\t\n\t\t\t\n\t\t\tLocation:'',\n\t\t\tTime:'',\n\t\t\tOrganizer: '',\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n   \n   \n\n\n    changeHandler = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n    submitHandler = e => {\n\t\te.preventDefault()\n\t\tconsole.log(this.state)\n\t\t\n\t\t\n\t\taxios\n\t\t\t.post('http://localhost:9000/event ', this.state,{\n\t\t\t\theaders :{\n\t\t\t\t  'Content-Type' : 'application/x-www-form-urlencoded',\n                  token : localStorage.getItem('token')\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n            this.setState({\n                Event_name: \"\",\n                Date: '',\n                \n                \n                Location:'',\n                Time:'',\n                Organizer: '',\n                \n\t\t\t\n            });\n\t}\n    render() {\n   const paperStyle = { padding: '30px 20px', width: 300, margin: \"20px auto\" }\n    const headerStyle = { margin: 0 }\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\n    const { Event_name,Date,Location,Time, Organizer} = this.state;\n    return (\n        <Grid>\n            <Paper elevation={20} style={paperStyle}>\n                <Grid align='center'>\n                    \n                    <Typography variant='caption' gutterBottom>Please Enter Events you want to show !</Typography>\n                </Grid>\n                <form onSubmit={this.submitHandler}>\n                    <TextField fullWidth label='Event Name' placeholder=\"Enter your Event name\" \n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"Event_name\"\n\t\t\t\t\t\t\tvalue={Event_name}\n\t\t\t\t\t\t\tonChange={this.changeHandler} />\n                    <TextField fullWidth type=\"date\"\n\t\t\t\t\t\t\tname=\"Date\"\n\t\t\t\t\t\t\tvalue={Date}\n\t\t\t\t\t\t\tonChange={this.changeHandler} />\n                    <TextField fullWidth label='Location' placeholder=\"Enter your Location\" type=\"text\"\n\t\t\t\t\t\t\tname=\"Location\"\n\t\t\t\t\t\t\tvalue={Location}\n\t\t\t\t\t\t\tonChange={this.changeHandler} />\n                 \n                   \n                    \n                    <TextField fullWidth label='Time' placeholder=\"Enter your time for the Event\" type=\"time\"\n\t\t\t\t\t\t\tname=\"Time\"\n\t\t\t\t\t\t\tvalue={\tTime}\n\t\t\t\t\t\t\tonChange={this.changeHandler} />\n                    <TextField fullWidth label='Organizer' placeholder=\"Enter your Organizer\" type=\"text\"\n\t\t\t\t\t\t\tname=\"Organizer\"\n\t\t\t\t\t\t\tvalue={\tOrganizer}\n\t\t\t\t\t\t\tonChange={this.changeHandler}/>\n              \n                   \n                   \n                    <Button type='submit' variant='contained' color='primary' style={{marginTop: \"15px\",marginLeft:\"90px\"}}>Submit Event</Button>\n                </form>\n            </Paper>\n        </Grid>\n    )\n}}\n\n\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}